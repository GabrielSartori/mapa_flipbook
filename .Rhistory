escala_quarto2 %>% .$grp_same_size %>% prettyNum(big.mark = ".")  %>% trimws() %>%
factor(., levels = levels(escala_quarto2$grp_same_size))
escala_quarto2 %>% .$grp_same_size %>% prettyNum(big.mark = ".")  %>% trimws()
set.seed(1234)
data <- c(rnorm(25, 2000, 500), 19, 10)
data <- data %>% cut(., breaks = 5, dig.lab = 4)
library(dplyr)
nd_data <- data %>% prettyNum(big.mark = ".")  %>% factor(., levels = levels(data))
nd_data
data <- c(rnorm(25, 2000, 500), 19, 10)
data
data <- data %>% cut(., breaks = 5, dig.lab = 4)
data
data %>% prettyNum(big.mark = ".")
data %>% prettyNum(big.mark = ".")  %>% factor(., levels = levels(data))
setwd("~/Suporte/DataScience/Projetos/mapa_estatico")
source("xaringan_reveal.R")
source("./function/packages.R")
# Formato numérico
number_br <-  function(x) format(x, big.mark = ".")
# data set
cwb <- readRDS("./data/cwb_regional_bairro.RDS")
terceiro <- readRDS(file = "./data/sub_terceiro.RDS")
terceiro
# Mediana do Valor m2
loca_tipologia_quarto <-
terceiro %>%
group_by(tipologia, bairro, quarto) %>%
summarise(media_locacao = median(valor))
# filtrando  apenas dois quartos
moradia_quarto2 <-
loca_tipologia_quarto %>%
filter(quarto == 2) %>%
ungroup() %>%
spread(tipologia, media_locacao) %>%
na.omit() %>%
mutate(bairro = toupper(bairro)) %>%
right_join(cwb, by = "bairro")
moradia_quarto2
moradia_quarto2
printr::
media <- apply(moradia_quarto2[, -1], 2, mean)
mean_ap <- media[2]
mean_casa <- media[3]
media
moradia_quarto2
moradia_quarto2 %>% select(apartamento, casa) %>% apply(., 2, mean)
moradia_quarto2 %>% select(apartamento, casa) %>% apply(., 2, mean, na.rm = TRUE)
media_moradia <- moradia_quarto2 %>% select(apartamento, casa) %>% apply(., 2, mean, na.rm = TRUE)
media_moradia <- moradia_quarto2 %>% select(apartamento, casa) %>% apply(., 2, mean, na.rm = TRUE)
media_ap <- media[1]
mean_casa <- media[3]
mean_casa
media_ap <- media_ap[1]
media_ap <- media_moradia[1]
mean_casa <- media_moradia[2]
mean_casa
media_ap <- media_moradia[1] %>% as.vector()
mean_casa <- media_moradia[2] %>% as.vector()
mean_casa
media_ap
```{r first_ggplot2, eval=T, echo=F, comment = " ", fig.height = 6}
ggplot(data = moradia_quarto2 ) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = mean_ap, linetype = "dashed") +
geom_vline(xintercept = mean_casa, linetype = "dashed") +
geom_text_repel(aes(label = bairro)) +
gghighlight(apartamento > mean_ap &  casa > mean_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
theme_bw()
require(ggrepel)
ggplot(data = moradia_quarto2 ) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = mean_ap, linetype = "dashed") +
geom_vline(xintercept = mean_casa, linetype = "dashed") +
geom_text_repel(aes(label = bairro)) +
gghighlight(apartamento > mean_ap &  casa > mean_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
theme_bw()
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple")
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento")
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = mean_ap, linetype = "dashed")
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = mean_ap, linetype = "dashed") +
geom_vline(xintercept = mean_casa, linetype = "dashed") +
geom_text_repel(aes(label = bairro))
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = mean_ap, linetype = "dashed") +
geom_vline(xintercept = mean_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white"))
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = mean_ap, linetype = "dashed") +
geom_vline(xintercept = mean_casa, linetype = "dashed")
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = media_ap, linetype = "dashed") +
geom_vline(xintercept = media_casa, linetype = "dashed")
media_moradia <- moradia_quarto2 %>% select(apartamento, casa) %>% apply(., 2, mean, na.rm = TRUE)
media_ap <- media_moradia[1] %>% as.vector()
mean_casa <- media_moradia[2] %>% as.vector()
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = media_ap, linetype = "dashed") +
geom_vline(xintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw()
media_moradia <- moradia_quarto2 %>% select(apartamento, casa) %>% apply(., 2, mean, na.rm = TRUE)
media_ap <- media_moradia[1] %>% as.vector()
media_casa <- media_moradia[2] %>% as.vector()
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = media_ap, linetype = "dashed") +
geom_vline(xintercept = media_casa, linetype = "dashed")
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = media_ap, linetype = "dashed") +
geom_vline(xintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white"))
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = media_ap, linetype = "dashed") +
geom_vline(xintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = media_ap, linetype = "dashed") +
geom_vline(xintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw()
ggplot(data = moradia_quarto2) +
aes(x = casa) +
aes(y = apartamento) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(yintercept = media_ap, linetype = "dashed") +
geom_vline(xintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw()
ggplot(data = moradia_quarto2) +
aes(x = apartamento) +
aes(y = casa) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_hline(xintercept = media_casa, linetype = "dashed") +
geom_vline(yintercept = media_ap, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw()
ggplot(data = moradia_quarto2) +
aes(x = apartamento) +
aes(y = casa) +
geom_point(colour = "purple") +
labs(x = "Casa") +
labs(y = "Apartamento") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_vline(xintercept = media_ap, linetype = "dashed") +
geom_hline(yintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw()
ggplot(data = moradia_quarto2) +
aes(x = apartamento) +
aes(y = casa) +
geom_point(colour = "purple") +
labs(x = "Apartamento") +
labs(y = "Casa") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_vline(xintercept = media_ap, linetype = "dashed") +
geom_hline(yintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw() +
theme(plot.title = element_text(vjust = 0.5))
ggplot(data = moradia_quarto2) +
aes(x = apartamento) +
aes(y = casa) +
geom_point(colour = "purple") +
labs(x = "Apartamento") +
labs(y = "Casa") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_vline(xintercept = media_ap, linetype = "dashed") +
geom_hline(yintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = moradia_quarto2) +
aes(x = apartamento) +
aes(y = casa) +
geom_point(colour = "purple") +
labs(x = "Apartamento") +
labs(y = "Casa") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_vline(xintercept = media_ap, linetype = "dashed") +
geom_hline(yintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = bairro)) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
display.brewer.all(n = 5)
display.brewer.all(n = 3)
display.brewer.all(n = 9)
display.brewer.pal(5, "Reds")
nomes <- display.brewer.all()
nomes
brewer.pal.info
brewer.pal.info %>%
as_tibble()
brewer.pal.info %>%
as.data.frame()
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
slice(4)
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
slice(., 4)
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
top_n(., 4)
brewer.pal.info
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
row_number(4)
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
row_number()
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
# row_number()
slice(.,4)
brewer.pal.info %>%
as.data.frame()
brewer.pal.info %>%
as.data.frame() %>%
group_by(maxcolors, category) %>%
# row_number()
slice(.,4)
brewer.pal.info %>%
as.data.frame() %>%
group_by(maxcolors, category) %>%
sample_n(5)
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
sample_n(5)
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
sample_n(3)
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
sample_n(3) %>%
rownames()
brewer.pal.info %>%
as.data.frame() %>%
group_by(category) %>%
sample_n(3)
brewer.pal.info %>%
as.data.frame()
brewer.pal.info %>%
as.data.frame() %>%
group_by(category)
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column() %>%
group_by(category) %>%
sample_n(3)
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column(nome_cor) %>%
group_by(category) %>%
sample_n(3)
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
sample_n(3)
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
sample_n(3) %>%
.$nome_cor
nome_cor <- brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
sample_n(3) %>%
.$nome_cor
display.brewer.all(n = 9, select = nome_cor)
nome_cor <- brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
sample_n(5) %>%
.$nome_cor
display.brewer.all(n = 9, select = nome_cor)
display.brewer.all(n = 9, select = nome_cor, colorblindFriendly=TRUE)
display.brewer.all(n = 9, select = nome_cor, colorblindFriendly=FALSE)
nome_cor <- brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
tidyr::nest()
nome_cor
# nome_cor <-
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
tidyr::nest() %>%
map(data = .$data, ~sample_n(5))
# nome_cor <-
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
tidyr::nest() %>%
map(data = .$data, ~sample_n(.x, 5))
# nome_cor <-
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
tidyr::nest() %>%
map(.$data, ~sample_n(.x, 5))
# nome_cor <-
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
tidyr::nest() %>%
mutate(data = map(.$data, ~sample_n(.x, 5)))
display.brewer.all(n = 9, select = nome_cor$data[1], colorblindFriendly=FALSE)
display.brewer.all(n = 9, select = nome_cor$data[[1]], colorblindFriendly=FALSE)
nome_cor$data
nome_cor <-
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
tidyr::nest() %>%
mutate(data = map(.$data, ~sample_n(.x, 5)))
nome_cor
nome_cor$data
nome_cor$data[[1]]
display.brewer.all(n = 9, select = nome_cor$data[[1]]$nome_cor, colorblindFriendly=FALSE)
brewer.pal.info
nome_cor <-
brewer.pal.info %>%
as.data.frame() %>%
tibble::rownames_to_column("nome_cor") %>%
group_by(category) %>%
tidyr::nest() %>%
mutate(data = map(.$data, ~sample_n(.x, 5)))
ggplot(data = moradia_quarto2) +
aes(x = apartamento) +
aes(y = casa) +
geom_point(colour = "purple") +
labs(x = "Apartamento") +
labs(y = "Casa") +
labs(title = "Relação Valor Locação Casa e Apartamento") +
geom_vline(xintercept = media_ap, linetype = "dashed") +
geom_hline(yintercept = media_casa, linetype = "dashed") +
gghighlight(apartamento > media_ap &  casa > media_casa, unhighlighted_params = list(colour = "white", fill = "white")) +
geom_text_repel(aes(label = tolower(bairro)), colour = "darkred") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
moradia_quarto2  %>%
sf::st_drop_geometry()
moradia_quarto2
moradia_quarto2  %>%
sf::st_drop_geometry()
moradia_quarto2
moradia_quarto2
# filtrando  apenas dois quartos
moradia_quarto2 <-
loca_tipologia_quarto %>%
filter(quarto == 2) %>%
ungroup() %>%
spread(tipologia, media_locacao) %>%
na.omit() %>%
mutate(bairro = toupper(bairro)) %>%
right_join(cwb, by = "bairro")
moradia_quarto2  %>%
sf::st_drop_geometry()
moradia_quarto2
moradia_quarto2
moradia_quarto2
moradia_quarto2  %>%
sf::st_drop_geometry()
moradia_quarto2  %>%
select(-geometry)
moradia_quarto2  %>%
select(regional, bairro, quarto, apartamento, casa)
moradia_quarto2
ggplot(data = moradia_quarto2 ) +
geom_sf() +
coord_sf() +
aes(fill = casa)  +
theme_void() +
theme(panel.grid.major =  element_line(colour = "transparent")) +
scale_fill_gradientn(colours = brewer.pal(5, "Reds"), na.value = "white") +
gghighlight(!is.na(casa), unhighlighted_params = list(colour = "gray70", fill = "gray90")) +
labs(fill = "Valor")
ggplot(data = moradia_quarto2 ) +
geom_sf() +
coord_sf() +
aes(fill = casa)  +
theme_void() +
theme(panel.grid.major =  element_line(colour = "transparent")) +
scale_fill_gradientn(colours = brewer.pal(5, "Oranges"), na.value = "white") +
gghighlight(!is.na(casa), unhighlighted_params = list(colour = "gray70", fill = "gray90")) +
labs(fill = "Valor")
# Formato numérico
number_br <-  function(x) format(x, big.mark = ".")
ggplot(data = moradia_quarto2 ) +
geom_sf() +
coord_sf() +
aes(fill = casa)  +
theme_void() +
theme(panel.grid.major =  element_line(colour = "transparent")) +
scale_fill_gradientn(colours = brewer.pal(5, "Oranges"), na.value = "white", labels = number_br) +
gghighlight(!is.na(casa), unhighlighted_params = list(colour = "gray70", fill = "gray90")) +
labs(fill = "Valor")
